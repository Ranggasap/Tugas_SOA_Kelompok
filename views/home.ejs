<!DOCTYPE html>
<html>
  <head>
    <title>Florist App - Home</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
      rel="stylesheet"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;600;700&family=Lato:wght@300;400;600;700&display=swap"
      rel="stylesheet"
    />
    <style>
      :root {
        --c-primary: #f5f5dc;
        --c-secondary: #556b2f;
        --c-dark: #212529;
        --c-brand-light: #868d95;
        --c-brand-rgb: 78, 87, 212;
        --c-body: #8e8d8a;
        --font-heading: "Playfair Display", serif;
        --font-base: "Lato", sans-serif;
        --box-shadow: 0px 15px 25px rgba(0, 0, 0, 0.08);
        --transition: all 0.5s ease;
        --c-accent-pink: #ffc0cb;
        --c-accent-lavender: #e6e6fa;
        --c-accent-peach: #ffdab9;
        --card-hover-shadow: 0px 25px 35px rgba(0, 0, 0, 0.15);
      }

      /* RESET & HELPERS */
      body {
        font-family: var(--font-base);
        line-height: 1.7;
        background: var(--c-primary);
        padding-top: 80px;
        min-height: 100vh;
      }

      /* NAVBAR */
      .navbar {
        background: rgba(255, 255, 255, 0.95) !important;
        backdrop-filter: blur(10px);
        border-bottom: 1px solid rgba(85, 107, 47, 0.1);
        height: 80px;
        box-shadow: var(--box-shadow);
      }

      .store-name {
        font-family: var(--font-heading);
        font-size: 1.8rem;
        font-weight: 700;
        color: var(--c-secondary);
        text-decoration: none;
        transition: var(--transition);
      }

      .store-name:hover {
        color: var(--c-secondary);
        transform: scale(1.05);
      }

      /* BUTTONS */
      .btn {
        font-weight: 600;
        font-size: 14px;
        text-transform: uppercase;
        border-radius: 25px;
        padding: 10px 24px;
        transition: var(--transition);
      }

      .btn-custom {
        height: 50px;
        background-color: var(--c-secondary);
        border-color: var(--c-secondary);
        color: white;
        font-size: 16px;
        border-radius: 50px;
        box-shadow: var(--box-shadow);
      }

      .btn-custom:hover {
        background-color: var(--c-primary);
        border-color: var(--c-secondary);
        color: var(--c-dark);
        transform: translateY(-2px);
        box-shadow: var(--card-hover-shadow);
      }

      /* FORM CONTROLS */
      .form-control {
        height: 50px;
        font-size: 16px;
        border-radius: 25px;
        background: rgba(255, 255, 255, 0.9);
        border: 2px solid transparent;
        padding: 15px 25px;
        transition: var(--transition);
      }

      .form-control:focus {
        border-color: var(--c-secondary);
        box-shadow: 0 0 0 0.2rem rgba(85, 107, 47, 0.25);
        background: white;
      }

      /* PRODUCT CARDS */
      .product-card {
        border: none;
        border-radius: 20px;
        padding: 20px;
        text-align: center;
        cursor: pointer;
        transition: var(--transition);
        height: 100%;
        background: rgba(255, 255, 255, 0.9);
        backdrop-filter: blur(10px);
        box-shadow: var(--box-shadow);
        position: relative;
        overflow: hidden;
        transform: translateY(0);
      }

      .product-card::before {
        content: "";
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(
          90deg,
          transparent,
          rgba(85, 107, 47, 0.1),
          transparent
        );
        transition: left 0.6s ease;
      }

      .product-card:hover::before {
        left: 100%;
      }

      .product-card:hover {
        transform: translateY(-15px) scale(1.03);
        box-shadow: var(--card-hover-shadow);
        border: 1px solid var(--c-secondary);
      }

      .product-card.animate-in {
        animation: slideInUp 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275)
          forwards;
      }

      @keyframes slideInUp {
        from {
          opacity: 0;
          transform: translateY(50px) scale(0.9);
        }
        to {
          opacity: 1;
          transform: translateY(0) scale(1);
        }
      }

      .product-img {
        width: 100%;
        height: 250px;
        object-fit: cover;
        border-radius: 15px;
        margin-bottom: 15px;
        transition: var(--transition);
      }

      .product-card:hover .product-img {
        transform: scale(1.1);
      }

      .product-title {
        font-family: var(--font-heading);
        font-weight: 600;
        color: var(--c-dark);
        margin-bottom: 15px;
        font-size: 1.2rem;
        line-height: 1.3;
      }

      .product-desc {
        color: var(--c-body);
        font-size: 0.95rem;
        line-height: 1.5;
        margin-bottom: 15px;
      }

      .price-tag {
        font-weight: bold;
        color: var(--c-secondary);
        font-size: 1.4rem;
        background: linear-gradient(
          135deg,
          rgba(85, 107, 47, 0.1),
          rgba(85, 107, 47, 0.2)
        );
        padding: 10px 20px;
        border-radius: 25px;
        display: inline-block;
        margin: 15px 0;
        border: 2px solid rgba(85, 107, 47, 0.2);
      }

      /* NAVIGATION */
      .profile-icon {
        font-size: 1.8rem;
        cursor: pointer;
        text-decoration: none;
        color: var(--c-secondary);
        transition: var(--transition);
        padding: 10px;
        border-radius: 50%;
      }

      .profile-icon:hover {
        color: var(--c-secondary);
        background: rgba(85, 107, 47, 0.1);
        transform: scale(1.1);
      }

      .nav-bottom {
        position: fixed;
        bottom: 0;
        left: 0;
        width: 100%;
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-top: 1px solid rgba(85, 107, 47, 0.1);
        z-index: 1000;
        padding: 10px 0;
        box-shadow: 0px -5px 15px rgba(0, 0, 0, 0.1);
      }

      .nav-bottom a {
        flex: 1;
        text-align: center;
        padding: 15px;
        text-decoration: none;
        color: var(--c-body);
        font-size: 0.9rem;
        transition: var(--transition);
        border-radius: 15px;
        margin: 0 5px;
      }

      .nav-bottom a:hover {
        color: var(--c-secondary);
        background: rgba(85, 107, 47, 0.1);
        transform: translateY(-2px);
      }

      /* CART BUTTON */
      .btn-cart {
        background: var(--c-accent-peach);
        color: var(--c-dark);
        border: none;
        border-radius: 25px;
        padding: 12px 25px;
        transition: var(--transition);
        box-shadow: var(--box-shadow);
        font-weight: 600;
      }

      .btn-cart:hover {
        background: var(--c-accent-pink);
        color: var(--c-dark);
        transform: translateY(-2px);
        box-shadow: var(--card-hover-shadow);
      }

      /* SEARCH SECTION */
      .search-section {
        background: rgba(255, 255, 255, 0.9);
        backdrop-filter: blur(10px);
        padding: 30px 0;
        margin: 20px 0 40px 0;
        border-radius: 30px;
        box-shadow: var(--box-shadow);
      }

      /* SECTION TITLES */
      .section-title {
        font-family: var(--font-heading);
        color: var(--c-dark);
        font-weight: 700;
        position: relative;
        display: inline-block;
        margin-bottom: 50px;
        font-size: 2.2rem;
      }

      .section-title::after {
        content: "";
        position: absolute;
        bottom: -15px;
        left: 50%;
        transform: translateX(-50%);
        width: 80px;
        height: 4px;
        background: linear-gradient(
          45deg,
          var(--c-secondary),
          var(--c-accent-peach)
        );
        border-radius: 2px;
      }

      /* MODAL */
      .modal-content {
        border: none;
        border-radius: 20px;
        box-shadow: var(--card-hover-shadow);
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
      }

      .modal-header {
        background: linear-gradient(
          135deg,
          var(--c-secondary),
          var(--c-accent-peach)
        );
        color: white;
        border-radius: 20px 20px 0 0;
        border-bottom: none;
      }

      /* BADGES */
      .badge {
        background: var(--c-secondary) !important;
        border-radius: 50%;
        font-size: 0.7rem;
        position: absolute;
        top: -5px;
        right: -5px;
      }

      .product-badge {
        position: absolute;
        top: 15px;
        right: 15px;
        background: linear-gradient(
          45deg,
          var(--c-secondary),
          var(--c-accent-peach)
        );
        color: white;
        padding: 5px 12px;
        border-radius: 15px;
        font-size: 0.8rem;
        font-weight: 600;
        z-index: 2;
      }

      /* LOADING */
      .loading-spinner {
        display: inline-block;
        width: 60px;
        height: 60px;
        border: 4px solid rgba(85, 107, 47, 0.3);
        border-radius: 50%;
        border-top-color: var(--c-secondary);
        animation: spin 1s ease-in-out infinite;
      }

      @keyframes spin {
        to {
          transform: rotate(360deg);
        }
      }

      .loading-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        min-height: 400px;
      }

      .loading-text {
        margin-top: 20px;
        color: var(--c-body);
        font-size: 1.1rem;
        animation: pulse 2s infinite;
      }

      @keyframes pulse {
        0%,
        100% {
          opacity: 0.7;
        }
        50% {
          opacity: 1;
        }
      }

      /* ALERTS */
      .alert-error {
        background: rgba(220, 53, 69, 0.1);
        border: 1px solid rgba(220, 53, 69, 0.3);
        color: #c0392b;
        border-radius: 15px;
        padding: 30px;
      }

      .alert-success {
        background: rgba(85, 107, 47, 0.1);
        border: 1px solid rgba(85, 107, 47, 0.3);
        color: var(--c-secondary);
        border-radius: 15px;
        padding: 30px;
      }

      /* RATING */
      .rating {
        color: var(--c-accent-peach);
        font-size: 0.9rem;
      }

      /* CONTAINER */
      .container {
        margin-bottom: 100px;
      }

      /* ANIMATIONS */
      .fade-in {
        animation: fadeInUp 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275) both;
      }

      @keyframes fadeInUp {
        from {
          opacity: 0;
          transform: translateY(40px) scale(0.9);
        }
        to {
          opacity: 1;
          transform: translateY(0) scale(1);
        }
      }

      /* RESPONSIVE */
      @media (max-width: 768px) {
        .product-img {
          height: 200px;
        }

        .search-section {
          padding: 20px 0;
          margin: 15px 0 25px 0;
        }

        .modal-dialog {
          margin: 1rem;
        }

        .store-name {
          font-size: 1.5rem;
        }

        .section-title {
          font-size: 1.8rem;
        }
      }

      /* FORM CONTAINER */
      .form-container {
        width: 100%;
        max-width: 500px;
        padding: 30px;
        border-radius: 15px;
        background: #fff;
        box-shadow: var(--box-shadow);
      }

      .form-container.login {
        max-width: 400px;
      }

      .form-container h3 {
        font-family: var(--font-heading);
      }

      .form-container a {
        color: var(--c-accent-peach);
        text-decoration: none;
      }

      .form-container a:hover {
        text-decoration: underline;
      }
    </style>
  </head>
  <body>
    <!-- Header -->
    <nav
      class="navbar fixed-top shadow-sm px-4 d-flex justify-content-between align-items-center"
    >
      <!-- Kiri: Profil -->
      <a href="/profile" class="profile-icon">
        <i class="fas fa-user-circle"></i>
        <span class="d-none d-md-inline ms-2" style="font-size: 1rem"
          >Profile</span
        >
      </a>

      <!-- Tengah: Nama Toko -->
      <div class="text-center flex-grow-1">
        <h1 class="store-name mb-0">Gunawan Florist</h1>
      </div>

      <!-- Kanan: Cart -->
      <div style="position: relative">
        <a href="/cart" class="btn btn-cart">
          <i class="fas fa-shopping-bag me-1"></i>
          <span class="d-none d-md-inline">Cart</span>
          <span id="cartCount" class="badge">0</span>
        </a>
      </div>
    </nav>

    <!-- Search Section -->
    <div class="container mt-4">
      <div class="search-section">
        <div class="row justify-content-center">
          <div class="col-md-8">
            <div class="input-group input-group-lg">
              <input
                id="mainSearch"
                class="form-control"
                type="search"
                placeholder="Cari bunga impian Anda..."
              />
              <button
                class="btn btn-custom"
                type="button"
                onclick="performSearch()"
              >
                <i class="fas fa-search me-2"></i>Cari
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Main Content -->
    <div class="container">
      <h2 class="section-title text-center d-block w-100">
        <i class="fas fa-seedling me-3"></i>Koleksi Bunga Premium
      </h2>
      <div class="row" id="productGrid">
        <!-- Loading state -->
        <div class="col-12">
          <div class="loading-container">
            <div class="loading-spinner"></div>
            <p class="loading-text">
              Memuat koleksi bunga terbaik untuk Anda...
            </p>
          </div>
        </div>
      </div>
    </div>

    <!-- Bottom Nav -->
    <div class="nav-bottom d-flex">
      <a href="#" onclick="goToHome()">
        <i class="fas fa-home d-block mb-1"></i>
        <small>Home</small>
      </a>
      <a href="#" onclick="goToHistory()">
        <i class="fas fa-history d-block mb-1"></i>
        <small>History</small>
      </a>
    </div>

    <!-- Modal Produk -->
    <div class="modal fade" id="productModal" tabindex="-1">
      <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="modalName">
              <i class="fas fa-flower me-2"></i>
            </h5>
            <button
              type="button"
              class="btn-close btn-close-white"
              data-bs-dismiss="modal"
            ></button>
          </div>
          <div class="modal-body text-center p-4">
            <img
              id="modalImg"
              src=""
              class="img-fluid rounded-3 mb-4"
              style="max-height: 400px; box-shadow: var(--box-shadow)"
            />
            <p id="modalDesc" class="text-muted fs-6 mb-4"></p>
            <div class="d-flex justify-content-center align-items-center mb-4">
              <h3 class="price-tag mb-0" id="modalPrice"></h3>
            </div>
          </div>
          <div class="modal-footer justify-content-center border-0">
            <button
              type="button"
              class="btn btn-outline-secondary me-3"
              data-bs-dismiss="modal"
            >
              <i class="fas fa-times me-2"></i>Tutup
            </button>
            <button class="btn btn-custom btn-lg" id="addToCartBtn">
              <i class="fas fa-cart-plus me-2"></i>Tambahkan ke Keranjang
            </button>
          </div>
        </div>
      </div>
    </div>

    <!-- Success Toast -->
    <div class="toast-container position-fixed bottom-0 end-0 p-3">
      <div id="successToast" class="toast" role="alert">
        <div class="toast-header bg-success text-white">
          <i class="fas fa-check-circle me-2"></i>
          <strong class="me-auto">Berhasil!</strong>
          <button
            type="button"
            class="btn-close btn-close-white"
            data-bs-dismiss="toast"
          ></button>
        </div>
        <div class="toast-body" id="toastMessage">
          Produk berhasil ditambahkan ke keranjang!
        </div>
      </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Firebase SDK v9 (modular) -->
    <script type="module">
      import { initializeApp } from "https://www.gstatic.com/firebasejs/10.8.1/firebase-app.js";
      import {
        getFirestore,
        collection,
        getDocs,
        onSnapshot,
      } from "https://www.gstatic.com/firebasejs/10.8.1/firebase-firestore.js";
      import {
        getAuth,
        onAuthStateChanged,
      } from "https://www.gstatic.com/firebasejs/10.8.1/firebase-auth.js";

      // Firebase Configuration
      const firebaseConfig = {
        apiKey: "AIzaSyBgSh39-LZUjqwisirJNPF1EIMcRvp_F48",
        authDomain: "florist-app-70c3d.firebaseapp.com",
        projectId: "florist-app-70c3d",
        storageBucket: "florist-app-70c3d.firebasestorage.app",
        messagingSenderId: "692096916407",
        appId: "1:692096916407:web:d6a76e5fa2d6c699e2e632",
      };

      // Initialize Firebase
      const app = initializeApp(firebaseConfig);
      const db = getFirestore(app);
      const auth = getAuth(app);

      // Global variables
      let currentProducts = [];
      let allProducts = [];
      let cart = JSON.parse(localStorage.getItem("cart")) || [];

      // Make functions globally accessible
      window.showProductModal = showProductModal;
      window.goToCart = goToCart;
      window.goToHome = goToHome;
      window.goToHistory = goToHistory;
      window.performSearch = performSearch;

      // Update cart count
      function updateCartCount() {
        document.getElementById("cartCount").textContent = cart.length;
      }

      // Show success toast
      function showSuccessToast(message) {
        document.getElementById("toastMessage").textContent = message;
        const toast = new bootstrap.Toast(
          document.getElementById("successToast")
        );
        toast.show();
      }

      // Load products from Firestore
      async function loadProductsFromFirestore() {
        const productGrid = document.getElementById("productGrid");

        try {
          console.log("Loading products from Firestore...");

          // Real-time listener for products collection
          const unsubscribe = onSnapshot(
            collection(db, "produk"),
            (querySnapshot) => {
              allProducts = [];

              querySnapshot.forEach((doc) => {
                const data = doc.data();
                console.log("Product data:", doc.id, data);

                allProducts.push({
                  id: doc.id, // Nama produk dari document ID
                  name: doc.id,
                  price: parseInt(data.Harga) || 0,
                  description: data.Deskripsi || "Deskripsi tidak tersedia",
                  image:
                    data.Gambar ||
                    "https://via.placeholder.com/400x300?text=No+Image",
                });
              });

              console.log("Total products loaded:", allProducts.length);
              currentProducts = [...allProducts];
              renderProducts(currentProducts);
            },
            (error) => {
              console.error("Error listening to products: ", error);
              showErrorState("Gagal memuat produk dari database");
            }
          );
        } catch (error) {
          console.error("Error initializing Firestore: ", error);
          showErrorState("Tidak dapat terhubung ke database");
        }
      }

      // Show error state
      function showErrorState(message) {
        const productGrid = document.getElementById("productGrid");
        productGrid.innerHTML = `
        <div class="col-12 text-center py-5">
          <div class="alert-error">
            <i class="fas fa-exclamation-triangle mb-3" style="font-size: 3rem;"></i>
            <h5>Terjadi Kesalahan</h5>
            <p class="mb-3">${message}</p>
            <button class="btn btn-custom" onclick="location.reload()">
              <i class="fas fa-refresh me-2"></i>Coba Lagi
            </button>
          </div>
        </div>
      `;
      }

      // Render products with enhanced animations
      function renderProducts(products) {
        const productGrid = document.getElementById("productGrid");
        productGrid.innerHTML = "";

        if (products.length === 0) {
          productGrid.innerHTML = `
          <div class="col-12 text-center py-5">
            <div class="alert-error">
              <i class="fas fa-search mb-3" style="font-size: 3rem;"></i>
              <h5>Tidak ada produk ditemukan</h5>
              <p class="mb-0">Coba gunakan kata kunci pencarian yang berbeda atau refresh halaman</p>
            </div>
          </div>
        `;
          return;
        }

        products.forEach((product, index) => {
          const col = document.createElement("div");
          col.className = "col-xl-4 col-lg-6 col-md-6 mb-4";
          col.style.animationDelay = `${index * 0.1}s`;
          col.innerHTML = `
          <div class="product-card h-100 animate-in" onclick="showProductModal('${
            product.id
          }')">
            <div class="product-badge">Premium</div>
            <img src="${product.image}" 
                 class="product-img" 
                 alt="${product.name}" 
                 onerror="this.src='https://via.placeholder.com/400x300/556B2F/ffffff?text=Bunga'">
            <h5 class="product-title">${product.name}</h5>
            <div class="price-tag">Rp ${product.price.toLocaleString(
              "id-ID"
            )}</div>
            <p class="product-desc">${
              product.description.length > 100
                ? product.description.substring(0, 100) + "..."
                : product.description
            }</p>
            <div class="mt-auto">
              <div class="rating mb-2">
                <i class="fas fa-star"></i>
                <i class="fas fa-star"></i>
                <i class="fas fa-star"></i>
                <i class="fas fa-star"></i>
                <i class="fas fa-star"></i>
                <span class="ms-1">(4.9)</span>
              </div>
              <small class="text-success">
                <i class="fas fa-shipping-fast me-1"></i>Pengiriman Cepat
              </small>
            </div>
          </div>
        `;
          productGrid.appendChild(col);
        });
      }

      // Show product modal
      function showProductModal(productId) {
        const product = allProducts.find((p) => p.id === productId);
        if (!product) return;

        document.getElementById(
          "modalName"
        ).innerHTML = `<i class="fas fa-flower me-2"></i>${product.name}`;
        document.getElementById("modalDesc").textContent = product.description;
        document.getElementById(
          "modalPrice"
        ).textContent = `Rp ${product.price.toLocaleString("id-ID")}`;
        document.getElementById("modalImg").src = product.image;

        // Add to cart functionality using fetch to /cart/update
        document.getElementById("addToCartBtn").onclick = () => {
          // Prepare form data
          const formBody = new URLSearchParams({
            idProduct: product.id,
            productName: product.name,
            productPrice: product.price,
            qty: 1,
          }).toString();

          fetch("/cart/update", {
            method: "POST",
            headers: {
              "Content-Type": "application/x-www-form-urlencoded",
            },
            body: formBody,
          })
            .then((response) => {
              if (response.ok) {
                // Optionally update local cart for UI, or just increment cart count
                // Here, let's increment cart count by 1 (or reload from server if needed)
                // For now, just increment
                let cartCountElem = document.getElementById("cartCount");
                let currentCount = parseInt(cartCountElem.textContent, 10);
                if (isNaN(currentCount)) currentCount = 0;
                cartCountElem.textContent = currentCount + 1;
                showSuccessToast(
                  `${product.name} berhasil ditambahkan ke keranjang!`
                );
                bootstrap.Modal.getInstance(
                  document.getElementById("productModal")
                ).hide();
              } else {
                response.text().then((msg) => {
                  alert("Gagal menambahkan ke keranjang: " + msg);
                });
              }
            })
            .catch((error) => {
              console.error("Error adding to cart:", error);
              alert("Terjadi kesalahan saat menambahkan ke keranjang.");
            });
        };

        new bootstrap.Modal(document.getElementById("productModal")).show();
      }

      // Search functionality
      function performSearch() {
        const keyword = document
          .getElementById("mainSearch")
          .value.toLowerCase()
          .trim();
        filterProducts(keyword);
      }

      function filterProducts(keyword) {
        if (!keyword) {
          currentProducts = [...allProducts];
        } else {
          currentProducts = allProducts.filter(
            (product) =>
              product.name.toLowerCase().includes(keyword) ||
              product.description.toLowerCase().includes(keyword)
          );
        }
        renderProducts(currentProducts);
      }

      // Navigation functions
      function goToCart() {
        if (cart.length === 0) {
          alert(
            "Keranjang Anda masih kosong! Silakan pilih bunga terlebih dahulu."
          );
        } else {
          alert(
            `Anda memiliki ${cart.length} jenis item di keranjang. Halaman cart akan segera tersedia!`
          );
        }
      }

      function goToHome() {
        window.location.reload();
      }

      function goToHistory() {
        alert("Fitur riwayat pembelian akan segera tersedia!");
      }

      // Event listeners
      document.getElementById("mainSearch").addEventListener("input", (e) => {
        const keyword = e.target.value.toLowerCase().trim();
        if (keyword === "") {
          currentProducts = [...allProducts];
          renderProducts(currentProducts);
        }
      });

      // Enter key support for search
      document
        .getElementById("mainSearch")
        .addEventListener("keypress", (e) => {
          if (e.key === "Enter") {
            e.preventDefault();
            performSearch();
          }
        });

      // Initialize page
      document.addEventListener("DOMContentLoaded", () => {
        updateCartCount();
        loadProductsFromFirestore();
      });

      // Authentication state listener
      onAuthStateChanged(auth, (user) => {
        if (user) {
          console.log("User logged in:", user.email);
        } else {
          console.log("No user logged in");
        }
      });
    </script>
  </body>
</html>
