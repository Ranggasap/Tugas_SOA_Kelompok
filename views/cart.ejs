<!DOCTYPE html>
<html>
  <head>
    <title>Cart</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <script
      src="https://app.sandbox.midtrans.com/snap/snap.js"
      data-client-key="<%= process.env.MIDTRANS_CLIENT_KEY %>"
    ></script>
    <link href="/css/style.css" rel="stylesheet" />
    <link
      href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;600;700&family=Lato:wght@300;400;600;700&display=swap"
      rel="stylesheet"
    />
    
  </head>
  <body>
    <div class="container my-5">
      <div class="col-12 col-md-8 mx-auto">
        <div class="mb-3 text-start">
          <a href="/" class="btn btn-outline-dark">
            ← Back to Home
          </a>
        </div>
        <h2 class="text-center mb-3 store-name">Shopping Cart</h2>
      </div>
      <div class="row justify-content-center">
        <div class="col-12 col-md-8">
          <!-- Cart Items -->
          <div class="d-flex flex-column gap-3">
            <% cart.forEach(function(item, i) { const total = item.productPrice
            * item.productQty; %>
            <div class="card">
              <div
                class="card-body d-flex flex-column flex-md-row justify-content-between align-items-center"
              >
                <div class="mb-2 mb-md-0">
                  <h5 class="product-title mb-3"><%= item.productName %></h5>
                  <p class="mb-1">
                    Price:
                    <span class="cart-price" data-index="<%= i %>"
                      >Rp <%= item.productPrice.toLocaleString('id-ID') %></span
                    >
                  </p>
                  <p class="mb-1">
                    Quantity:
                    <button
                      class="btn btn-outline-secondary btn-sm me-1 quantity-btn"
                      data-index="<%= i %>"
                      data-action="decrement"
                    >
                      –
                    </button>
                    <span class="cart-qty" data-index="<%= i %>"
                      ><%= item.productQty %></span
                    >
                    <button
                      class="btn btn-outline-secondary btn-sm ms-1 quantity-btn"
                      data-index="<%= i %>"
                      data-action="increment"
                    >
                      +
                    </button>
                  </p>
                  <p class="mb-0">
                    Total:
                    <span class="cart-total" data-index="<%= i %>"
                      >Rp <%= total.toLocaleString('id-ID') %></span
                    >
                  </p>
                </div>
              </div>
            </div>
            <% }) %>
          </div>
          <!-- Grand Total and Checkout -->
          <div class="card mt-4">
            <div class="card-body d-flex flex-column align-items-center">
              <h5 class="mb-3 w-100 text-left">
                Grand Total:
                <span id="grand-total"
                  >Rp <%= cart.reduce((sum, item) => sum + item.productPrice *
                  item.productQty, 0).toLocaleString('id-ID') %></span
                >
              </h5>
              <button id="checkout-btn" class="btn btn-success w-100">
                Checkout
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>

    <script>
                 // Initialize cart data from server-side variable
      const cart = <%- JSON.stringify(cart) %>;
      function formatRupiah(num) {
        return 'Rp ' + num.toLocaleString('id-ID');
      }
      function updateCartDisplay() {
        let grandTotal = 0;
        cart.forEach((item, i) => {
          const qtyElem = document.querySelector('.cart-qty[data-index="'+i+'"]');
          const totalElem = document.querySelector('.cart-total[data-index="'+i+'"]');
          if (qtyElem && totalElem) {
            qtyElem.textContent = item.productQty;
            const total = item.productPrice * item.productQty;
            totalElem.textContent = formatRupiah(total);
            grandTotal += total;
          }
        });
        document.getElementById('grand-total').textContent = formatRupiah(grandTotal);
      }
      document.querySelectorAll('.quantity-btn').forEach(btn => {
        btn.addEventListener('click', function() {
          const index = parseInt(this.getAttribute('data-index'));
          const action = this.getAttribute('data-action');
          let qtyChange = 0;
          if (action === 'increment') {
            cart[index].productQty += 1;
          } else if (action === 'decrement') {
            if (cart[index].productQty > 1) {
              cart[index].productQty -= 1;
            } else {
              // jika qty sudah 1 dan di-decrement, hapus item dari cart visual
              cart.splice(index, 1);
            }
          }
          updateCartDisplay();

          if (action === 'increment') {
            qtyChange = 1;
          } else if (action === 'decrement') {
            qtyChange = -1;
          }
          fetch('/cart/update', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              idProduct: cart[index] ? cart[index].productName : null,
              productName: cart[index] ? cart[index].productName : null,
              productPrice: cart[index] ? cart[index].productPrice : null,
              qty: qtyChange
            })
          }).then(response => {
            if (!response.ok) {
              throw new Error('Network response was not ok');
            }
            return response.json();
          }).then(data => {
            updateCartDisplay();
          }).catch(error => {
            console.error('Error updating cart:', error);
          });
        });
      });
                document.getElementById("checkout-btn").addEventListener("click", async function () {
            try {
              const response = await fetch("/checkout", {
                method: "POST",
                headers: {
                  "Content-Type": "application/json",
                },
              });
              const token = await response.text(); // token Midtrans
              console.log("Transaction token:", token);

              // Redirect atau panggil Snap popup
              if (window.snap) {
                snap.pay(token, {
                  onSuccess: function(result){
                    console.log("Payment success:", result);
                    window.location.href = "/history";
                  },
                  onPending: function(result){
                    console.log("Payment pending:", result);
                    window.location.href = "/history";
                  },
                  onError: function(result){
                    console.error("Payment error:", result);
                    alert("Payment failed!");
                  },
                });
              } else {
                alert("Token received, implement Snap popup here");
              }
            } catch (err) {
              console.error("Checkout error:", err);
              alert("Terjadi kesalahan saat checkout!");
            }
          });
                // Responsive: update on load
                updateCartDisplay();
    </script>
  </body>
</html>
